<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="JSON Form" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>after_method_id</string> </key>
            <value> <string>jIOWebSection_searchInstance</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/json</string> </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>jIOWebSection_searchInstanceFromJSON</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>jIOWebSection_searchInstanceFromJSON</string> </value>
        </item>
        <item>
            <key> <string>output_schema</string> </key>
            <value> <string>{\n
  "$schema": "http://json-schema.org/draft-07/schema#",\n
  "title": "allDocs: Response Payload",\n
  "description": "Payload returned by allDocs method.",\n
  "properties": {\n
    "result_number": {\n
      "title": "Result Number",\n
      "type": "number",\n
      "description": "Quantity of results found"\n
    },\n
    "max_result_number_allowed": {\n
      "title": "Max Result Number",\n
      "type": "number",\n
      "description": "Highest number of result given by the system. To get the rest of the result you can use \'from_processing_timestamp\' parameter for pagination."\n
    },\n
    "result_list": {\n
      "title": "Result List",\n
      "description": "Contains a representation of the items",\n
      "type": "array",\n
      "items": {\n
        "anyOf": [\n
          {\n
            "type": "object",\n
            "title": "Software Instance",\n
            "properties": {\n
              "reference": {\n
                "title": "Software Instance Reference",\n
                "description": "Unique identifier of the Software Instance",\n
                "type": "string"\n
              },\n
              "title": {\n
                "title": "Unique Title of the Instance",\n
                "type": "string"\n
              },\n
              "state": {\n
                "title": "Requested State",\n
                "type": "string",\n
                "enum": ["started", "stopped", "destroyed"],\n
                "description": "State of the requested instance. It is functionnal when started. In stopped state, all services are stopped. If destroyed, it will remove the instance."\n
              },\n
              "compute_partition_id": {\n
                "title": "Compute Partition Id",\n
                "type": "string",\n
                "description": "Id Of the Requesting Compute Partition, used by Slap Client when an instance is requesting an instance"\n
              },\n
              "software_release_uri": {\n
                "title": "Software Release URI",\n
                "type": "string",\n
                "description": "URL of the software release used by the software instance"\n
              },\n
              "processing_timestamp": {\n
                "title": "Processing Timestamp",\n
                "type": "number",\n
                "description": "Timestamp set by the master node to mark when it was last processed in the master node. If it has been processed on master, it needs reprocessing on the compute node."\n
              },\n
              "portal_type": {\n
                "title": "Portal Type",\n
                "const": "Software Instance",\n
                "type": "string"\n
              }\n
            }\n
          },\n
          {\n
            "type": "object",\n
            "title": "Shared Instance",\n
            "properties": {\n
              "reference": {\n
                "title": "Software Instance Reference",\n
                "description": "Unique identifier of the Software Instance",\n
                "type": "string"\n
              },\n
              "title": {\n
                "title": "Unique Title of the Instance",\n
                "type": "string"\n
              },\n
              "state": {\n
                "title": "Requested State",\n
                "type": "string",\n
                "enum": ["started", "stopped", "destroyed"],\n
                "description": "State of the requested instance. It is functionnal when started. In stopped state, all services are stopped. If destroyed, it will remove the instance."\n
              },\n
              "processing_timestamp": {\n
                "title": "Processing Timestamp",\n
                "type": "number",\n
                "description": "Timestamp set by the master node to mark when it was last processed in the master node. If it has been processed on master, it needs reprocessing on the compute node."\n
              },\n
              "portal_type": {\n
                "title": "Portal Type",\n
                "const": "Shared Instance",\n
                "type": "string"\n
              }\n
            }\n
          }\n
        ]\n
      }\n
    }\n
  }\n
}</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>JSON Form</string> </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string>{\n
  "$schema": "http://json-schema.org/draft-07/schema#",\n
  "$id": "software-instance-base-schema.json",\n
  "title": "Software Instance",\n
  "description": "Software Instance Search",\n
  "type": "object",\n
  "oneOf": [\n
    {\n
      "properties": {\n
        "title": {\n
          "title": "Title",\n
          "type": "string",\n
          "description": "Unique Name of the Software Instance",\n
          "maxLength": 200\n
        },\n
        "compute_node_id": {\n
          "title": "Compute Node ID",\n
          "type": "string",\n
          "description": "The Id of the compute node hosting the instance, example: COMP-1234"\n
        },\n
        "compute_partition_id": {\n
          "title": "Compute Partition Id",\n
          "type": "string",\n
          "description": "Id Of the Requesting Compute Partition, used by Slap Client when an instance is requesting an instance"\n
        },\n
        "root_instance_title": {\n
          "title": "Root Instance Title",\n
          "type": "string",\n
          "description": "Title of the Instance at the root of the instance tree. This is the title of the instance that has been requested by the user."\n
        },\n
        "state": {\n
          "title": "Requested State",\n
          "type": "string",\n
          "enum": ["started", "stopped", "destroyed"],\n
          "description": "State of the requested instance. It is functionnal when started. In stopped state, all services are stopped. If destroyed, it will remove the instance."\n
        },\n
        "from_processing_timestamp": {\n
          "title": "From Processing Timestamp",\n
          "type": "number",\n
          "description": "Filter by processing timestamp. Returns the list of elements having a processing timestamp higher or equal to the one inputed. The Processing Timestamp is set by the master node to mark when the element was last processed. If it has been processed on master, it needs reprocessing on the compute node."\n
        },\n
        "portal_type": {\n
          "title": "Portal Type",\n
          "const": "Software Instance",\n
          "type": "string"\n
        }\n
      },\n
      "required": ["portal_type"]\n
    },\n
    {\n
      "properties": {\n
        "title": {\n
          "title": "Title",\n
          "type": "string",\n
          "description": "Unique Name of the Software Instance",\n
          "maxLength": 200\n
        },\n
        "host_instance_reference": {\n
          "title": "Host Instance Reference",\n
          "type": "string",\n
          "description": "Reference of the Instance where this is instance is hosted, usefull for shared instances"\n
        },\n
        "root_instance_title": {\n
          "title": "Root Instance Title",\n
          "type": "string",\n
          "description": "Title of the Instance at the root of the instance tree. This is the title of the instance that has been requested by the user."\n
        },\n
        "state": {\n
          "title": "Requested State",\n
          "type": "string",\n
          "enum": ["started", "stopped", "destroyed"],\n
          "description": "State of the requested instance. It is functionnal when started. In stopped state, all services are stopped. If destroyed, it will remove the instance."\n
        },\n
        "from_processing_timestamp": {\n
          "title": "From Processing Timestamp",\n
          "type": "number",\n
          "description": "Filter by processing timestamp. Returns the list of elements having a processing timestamp higher or equal to the one inputed. The Processing Timestamp is set by the master node to mark when the element was last processed. If it has been processed on master, it needs reprocessing on the compute node."\n
        },\n
        "portal_type": {\n
          "title": "Portal Type",\n
          "const": "Shared Instance",\n
          "type": "string"\n
        }\n
      },\n
      "required": ["portal_type"]\n
    }\n
  ]\n
}\n
</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
