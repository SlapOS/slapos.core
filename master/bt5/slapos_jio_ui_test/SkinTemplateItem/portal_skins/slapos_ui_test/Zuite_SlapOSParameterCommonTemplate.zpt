<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"
           xmlns:metal="http://xml.zope.org/namespaces/metal">


  <tal:block metal:define-macro="wait_software_type_selection">
      <tr>
        <td colspan="3"><b> Wait for software type </b></td>
      </tr>
      <tr>
        <td>waitForElementPresent</td>
        <td>//div[contains(@data-gadget-url,
          'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]</td>
        <td></td>
      </tr>
      <tr>
        <td>assertElementPresent</td>
        <td>//div[contains(@data-gadget-url,
          'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]</td>
        <td></td>
      </tr>
  </tal:block>

  <tal:block metal:define-macro="wait_software_type_selection_default">
    <tal:block metal:use-macro="here/Zuite_SlapOSParameterCommonTemplate/macros/wait_software_type_selection" />
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]//option[text()="Default"]
      </td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]//option[text()="Default"]
      </td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="select_software_type_json_in_xml">
    <tr>
      <td colspan="3"><b> Change Software type</b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]//option[text()="JSON in XML"]
      </td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]//option[text()="JSON in XML"]
      </td>
      <td></td>
    </tr>
    <tr>
      <td>select</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//select[@name="software_type"]
      </td>
      <td>JSON in XML</td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="init">
    <tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/init" />
    <tr>
      <td>open</td>
      <td>${base_url}/web_site_module/hostingjs/#/?page=slap_test_parameter_form</td>
      <td></td>
    </tr>
    <tal:block metal:use-macro="here/Zuite_SlapOSCommonTemplate/macros/wait_for_app_loaded" />
    <tr>
      <td>waitForElementPresent</td>
      <td>//input[@name='url_string']</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//input[@name='url_string']</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//textarea[@name='text_content']</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//textarea[@name='text_content']</td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="init_readonly">
    <tal:block metal:use-macro="here/Zuite_CommonTemplate/macros/init" />
    <tr>
      <td>open</td>
      <td>${base_url}/web_site_module/hostingjs/#/?page=slap_test_readonly_parameter_form</td>
      <td></td>
    </tr>
    <tal:block metal:use-macro="here/Zuite_SlapOSCommonTemplate/macros/wait_for_app_loaded" />
    <tr>
      <td>waitForElementPresent</td>
      <td>//input[@name='url_string']</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//input[@name='url_string']</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//textarea[@name='parameter_output']</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//textarea[@name='parameter_output']</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//textarea[@name='text_content']</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//textarea[@name='text_content']</td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="click_proceed_and_wait_for_hash">
    <tal:block metal:use-macro="here/Zuite_SlapOSCommonTemplate/macros/click_proceed" />
    <tr>
      <td>waitForElementPresent</td>
      <td>//pre[@id="parameter_output"]</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//pre[@id="parameter_output"]</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//p[@id="parameter_hash"]</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//p[@id="parameter_hash"]</td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="show_raw_parameter">
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-raw-parameter")]</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-raw-parameter")]</td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-raw-parameter")]</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//textarea[@name="text_content"]</td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td>//textarea[@name="text_content"]</td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="show_form_parameter">
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-form")]</td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-form")]</td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td>//div[contains(@data-gadget-url,
        'gadget_erp5_page_slap_parameter_form.html')]//button[contains(@class, "slapos-show-form")]</td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="assert_invalid_feedback">
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//p[@class=\'invalid-feedback\' and text() = \'%s\']' % (name, value)" ></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//p[@class=\'invalid-feedback\' and text() = \'%s\']' % (name, value)"></td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="assert_not_invalid_feedback">
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//p[@class=\'invalid-feedback\' and text() = \'%s\' and @style=\'display: none;\']' % (name, value)" ></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//p[@class=\'invalid-feedback\' and text() = \'%s\'  and @style=\'display: none;\']' % (name, value)"></td>
      <td></td>
    </tr>
  </tal:block>


  <tal:block metal:define-macro="wait_for_input_text">
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\']' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\']' % name"></td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="input_text">
    <tr>
      <td colspan="3"><b tal:content="python: 'Fill %s' % name"></b></td>
    </tr>
    <tal:block metal:use-macro="here/Zuite_SlapOSParameterCommonTemplate/macros/wait_for_input_text" />
    <tr>
      <td>type</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\']' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="input_textarea">
    <tr>
      <td colspan="3"><b tal:content="python: 'Fill %s (textarea)' % name"></b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//textarea[@name=\'%s\']' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//textarea[@name=\'%s\']' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>type</td>
      <td tal:content="python: '//textarea[@name=\'%s\']' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="assert_readonly_input_text">
    <tr>
      <td colspan="3"><b tal:content="python: 'Asssert readonly on %s' % name"></b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertValue</td>
      <td tal:content="python: '//input[@name=\'%s\' and @type=\'text\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>


  <tal:block metal:define-macro="assert_readonly_input_textarea">
    <tr>
      <td colspan="3"><b tal:content="python: 'Asssert readonly on %s' % name"></b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//textarea[@name=\'%s\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//textarea[@name=\'%s\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertValue</td>
      <td tal:content="python: '//textarea[@name=\'%s\' and @readonly=\'true\'][@disabled]' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="wait_for_input_select">
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//select[@name=\'%s\']' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//select[@name=\'%s\']' % name"></td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="input_select">
    <tr>
      <td colspan="3"><b tal:content="python: 'Select on %s' % name"></b></td>
    </tr>
    <tal:block metal:use-macro="here/Zuite_SlapOSParameterCommonTemplate/macros/wait_for_input_select" />
    <tr>
      <td>select</td>
      <td tal:content="python: '//select[@name=\'%s\']' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="assert_readonly_input_select">
        <tr>
      <td colspan="3"><b tal:content="python: 'Assert read only on select for %s' % name"></b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//select[@name=\'%s\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//select[@name=\'%s\'][@disabled]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>select</td>
      <td tal:content="python: '//select[@name=\'%s\'][@disabled]' % name"></td>
      <td tal:content="python: value"></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="json_del_property">
    <tr>
      <td colspan="3"><b tal:content="python: 'Remove one extra property/object on %s' % name"></b></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>

    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//label[contains(text(), \'%s\')]/..//input[@type=\'checkbox\' and @class=\'form-check-input\']' % (name, value)"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//label[contains(text(), \'%s\')]/..//input[@type=\'checkbox\' and @class=\'form-check-input\']' % (name, value)"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//label[contains(text(), \'%s\')]/..//input[@type=\'checkbox\' and @class=\'form-check-input\']' % (name, value)"></td>
      <td></td>
    </tr>

    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>

  </tal:block>

  <tal:block metal:define-macro="json_add_property">
    <tr>
      <td colspan="3"><b tal:content="python: 'Add one extra property/object on %s' % name"></b></td>
    </tr>

    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//input[@type = \'text\' and contains(@class, \'property-selector-input\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//input[@type = \'text\' and contains(@class, \'property-selector-input\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>type</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//input[@type = \'text\' and contains(@class, \'property-selector-input\')]' % name"></td>
      <td tal:content="python: value"></td>
    </tr>

    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//button[contains(@class, \'json-editor-btn-add\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//button[contains(@class, \'json-editor-btn-add\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']//button[contains(@class, \'json-editor-btn-add\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>waitForElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>assertElementPresent</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
    <tr>
      <td>click</td>
      <td tal:content="python: '//div[@data-schemapath=\'%s\']/span/button[contains(@class, \'json-editor-btn-edit_properties\')]' % name"></td>
      <td></td>
    </tr>
  </tal:block>

  <tal:block metal:define-macro="set_software_for_parameter_test">
    <tr>
      <td colspan="3"><b> Set URL for the software release </b></td>
    </tr>
    <tr>
      <td>type</td>
      <td>//input[@name='url_string']</td>
      <td tal:content="python: 'https://lab.nexedi.com/nexedi/slapos/raw/%s/software/%s/software.cfg' % (context.ERP5Site_getSoftwareReleaseTagVersion(), name)"></td>
    </tr>
  </tal:block>
</tal:block>